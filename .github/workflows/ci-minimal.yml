name: Enhanced CI Pipeline

on:
  pull_request:
  push:
    branches: [main, develop]
  schedule:
    - cron: '0 6 * * 1'  # Weekly security scans

env:
  GO_VERSION: '1.21'
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'

jobs:
  # Go build and test matrix
  go-test:
    name: Go Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          cache-dependency-path: go/go.sum
          
      - name: Verify Go modules
        working-directory: ./go
        run: |
          go mod verify
          go mod tidy
          git diff --exit-code
        
      - name: Run Go tests with race detection
        working-directory: ./go
        run: |
          go test -race -coverprofile=coverage.out -covermode=atomic ./...
          go tool cover -html=coverage.out -o coverage.html

  # Python tests
  python-test:
    name: Python Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: python/requirements*.txt
          
      - name: Install dependencies
        working-directory: ./python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -e .
          
      - name: Run tests with coverage
        working-directory: ./python
        run: |
          pytest tests/ --cov=truenas_storage_monitor --cov-report=xml --cov-report=html --cov-fail-under=60 -v

  # All checks passed gate
  ci-success:
    name: CI Success Gate
    runs-on: ubuntu-latest
    needs: 
      - go-test
      - python-test
    if: always()
    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.go-test.result }}" != "success" || 
                "${{ needs.python-test.result }}" != "success" ]]; then
            echo "One or more required jobs failed"
            exit 1
          fi
          
          echo "All required CI checks passed successfully!"